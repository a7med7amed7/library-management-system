services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: library_management_app
    restart: unless-stopped
    environment:
      PORT: 3030
      JWT_SECRET: secret_eeeh
      NODE_ENV: production
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_NAME: library_management
      DB_HOST: mysql
      DEBUG: '*,-babel,-express:*,-body-parser:*,-nodemon,-morgan,-sequelize,-sequelize:*'
      DEBUG_COLORS: true
      DEBUG_DEPTH: 10
    ports:
      - "3030:3030"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  mysql:
    image: mysql:8.0.35
    container_name: mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: library_management
      MYSQL_ROOT_HOST: '%'  # Allow connections from any host
    ports:
      - "3304:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 40s
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    command: --bind-address=0.0.0.0 --innodb-use-native-aio=0

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge